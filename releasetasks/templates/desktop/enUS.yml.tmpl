{% set locale = "en-US" %}
{% for platform, platform_info in en_US_config["platforms"].iteritems() %}

{% if push_to_candidates_enabled %}  # beetmover
{% set complete_beetmover_basename = "release-{}_{}_{}_complete_en-US_beetmover_candidates".format(branch, product, platform) %}
{% do artifact_completes_builders.append(complete_beetmover_basename) %}
-
    taskId: "{{ stableSlugId(complete_beetmover_basename) }}"
    requires:
        - "{{ stableSlugId("beetmove_image") }}"
    reruns: 5
    task:
        provisionerId: aws-provisioner-v1
        workerType: gecko-3-b-linux
        created: "{{ now }}"
        deadline: "{{ now.replace(days=4) }}"
        expires: "{{ never }}"
        priority: "high"
        retries: 5
        routes:
            - tc-treeherder-stage.v2.{{ branch }}.{{ revision }}.{{ pushlog_id }}
            - tc-treeherder.v2.{{ branch }}.{{ revision }}.{{ pushlog_id }}
            - index.releases.v1.{{ branch }}.{{ revision }}.{{ product }}.{{ version | replace(".", "_") }}.build{{ buildNumber }}.beetmover.en_US.{{ platform }}
            - index.releases.v1.{{ branch }}.latest.{{ product }}.latest.beetmover.en_US.{{ platform }}
        payload:
            maxRunTime: 7200
            image:
                type: task-image
                path: public/image.tar.zst
                taskId: {{ stableSlugId("beetmove_image") }}
            command:
                - /bin/bash
                - -c
                - >
                  wget -O mozharness.tar.bz2 https://hg.mozilla.org/{{ repo_path }}/archive/{{ mozharness_changeset }}.tar.bz2/testing/mozharness &&
                  mkdir mozharness && tar xvfj mozharness.tar.bz2 -C mozharness --strip-components 3 && cd mozharness
                  && python scripts/release/beet_mover.py --no-refresh-antivirus --template configs/beetmover/en_us_build.yml.tmpl --platform {{ buildbot2ftp(platform) }} --product {{ product }} --version {{ version }} --app-version {{ appVersion }} --locale en-US --taskid {{ platform_info['unsigned_task_id'] }} --build-num build{{ buildNumber }} --bucket {{ beetmover_candidates_bucket }}
                  {% if not (platform.startswith("mac") and platform_info['ci_system'] == 'tc') -%} && python scripts/release/beet_mover.py --no-refresh-antivirus --template configs/beetmover/en_us_signing.yml.tmpl --platform {{ buildbot2ftp(platform) }} --product {{ product }} --version {{ version }} --app-version {{ appVersion }} --locale en-US --taskid {{ platform_info['signed_task_id'] }} --build-num build{{ buildNumber }} --bucket {{ beetmover_candidates_bucket }} {% endif -%}
                  {% if "repackage_task_id" in platform_info -%} && python scripts/release/beet_mover.py --no-refresh-antivirus --template configs/beetmover/en_us_repackage.yml.tmpl --platform {{ buildbot2ftp(platform) }} --product {{ product }} --version {{ version }} --app-version {{ appVersion }} --locale en-US --taskid {{ platform_info['repackage_task_id'] }} --build-num build{{ buildNumber }} --bucket {{ beetmover_candidates_bucket }} {% endif -%}
                  {% if "repackage-signing_task_id" in platform_info -%} && python scripts/release/beet_mover.py --no-refresh-antivirus --template configs/beetmover/en_us_repackage_signing.yml.tmpl --platform {{ buildbot2ftp(platform) }} --product {{ product }} --version {{ version }} --app-version {{ appVersion }} --locale en-US --taskid {{ platform_info['repackage-signing_task_id'] }} --build-num build{{ buildNumber }} --bucket {{ beetmover_candidates_bucket }} {% endif -%}
                  && echo done
            env:
                DUMMY_ENV_FOR_ENCRYPT: "fake"
            encryptedEnv:
                - {{ encrypt_env_var(stableSlugId(complete_beetmover_basename), now_ms,
                                   now_ms + 24 * 4 * 3600 * 1000, 'AWS_ACCESS_KEY_ID',
                                   beetmover_aws_access_key_id) }}
                - {{ encrypt_env_var(stableSlugId(complete_beetmover_basename), now_ms,
                                   now_ms + 24 * 4 * 3600 * 1000, 'AWS_SECRET_ACCESS_KEY',
                                   beetmover_aws_secret_access_key) }}
        metadata:
            name: "[beetmover] {{ product }} {{ branch }} {{ platform }} en_US completes candidates"
            description: "moves artifacts for en_US based builds to candidates dir"
            owner: "release@mozilla.com"
            source: https://github.com/mozilla/releasetasks

        extra:
            {{ common_extras(taskname=complete_beetmover_basename, locales=["en-US"], platform=platform) | indent(12)}}
            treeherderEnv:
                - staging
                - production
            treeherder:
                symbol: en-US
                groupSymbol: BM
                collection:
                    opt: true
                machine:
                    platform: {{ get_treeherder_platform(platform) }}
                build:
                    platform: {{ get_treeherder_platform(platform) }}


{% endif %}  # push_to_candidates_enabled

{# Repackage LZMA-compressed MARs to BZ2 if required #}
{% if lzma_to_bz2 is defined and lzma_to_bz2 %}
{% set recompress_basename = "{}_{}_recompress".format(platform, locale) %}

-
    taskId: "{{ stableSlugId('{}_repackage_complete_mars'.format(recompress_basename)) }}"
    reruns: 5
    requires:
        - "{{ stableSlugId("funsize_update_generator_image") }}"
    task:
        created: "{{ now }}"
        deadline: "{{ now.replace(days=4) }}"
        expires: "{{ never }}"
        priority: "high"
        metadata:
            owner: release+funsize@mozilla.com
            source: https://github.com/mozilla/funsize
            name: "[funsize] Convert LZMA-compressed MARs to BZ2 ({{ platform }} {{ locale }})"
            description: |
                Convert LZMA-compressed MARs to BZ2 ({{ platform }} {{ locale }}).

        routes:
            - tc-treeherder-stage.v2.{{ branch }}.{{ revision }}.{{ pushlog_id }}
            - tc-treeherder.v2.{{ branch }}.{{ revision }}.{{ pushlog_id }}
            - index.releases.v1.{{ branch }}.{{ revision }}.{{ product }}.{{ version | replace(".", "_") }}.build{{ buildNumber }}.recompress.{{ platform }}.{{ locale }}
            - index.releases.v1.{{ branch }}.latest.{{ product }}.latest.recompress.{{ platform }}.{{ locale }}
        extra:
            {{ common_extras(taskname='{}_repackage_complete_mars'.format(recompress_basename), locales=["en-US"], platform=platform) | indent(12)}}
            funsize:
                completes:
                    -
                        {# TC based tasks have different signed/unsigned tasks and use a slightly different URL #}
                        {% if platform_info["ci_system"] == "bb" %}
                        to_mar: "https://queue.taskcluster.net/v1/task/{{ platform_info["signed_task_id"] }}/artifacts/public/build/{{ funsize_product }}-{{ appVersion }}.{{ locale }}.{{ buildbot2ftp(platform) }}.complete.mar"
                        {% else %}
                        {% if "repackage-signing_task_id" in platform_info %}
                        to_mar: "https://queue.taskcluster.net/v1/task/{{ platform_info["repackage-signing_task_id"] }}/artifacts/public/build/target.complete.mar"
                        {% else %}
                        to_mar: "https://queue.taskcluster.net/v1/task/{{ platform_info["signed_task_id"] }}/artifacts/public/build/update/target.complete.mar"
                        {% endif %}
                        {% endif %}
                        locale: en-US
                        platform: {{ platform }}
                        branch: {{ branch }}
                        toVersion: "{{ version }}"
                        toBuildNumber: {{ buildNumber }}

            treeherderEnv:
                - staging
                - production
            treeherder:
                symbol: {{ locale }}-r
                groupSymbol: Update
                collection:
                    opt: true
                machine:
                    platform: {{ get_treeherder_platform(platform) }}
                build:
                    platform: {{ get_treeherder_platform(platform) }}

        workerType: "funsize-mar-generator"
        provisionerId: "aws-provisioner-v1"

        tags:
            createdForUser: release+funsize@mozilla.com

        payload:
            image:
                type: task-image
                path: public/image.tar.zst
                taskId: "{{ stableSlugId("funsize_update_generator_image") }}"
            maxRunTime: 3600
            command:
                - /recompress.sh

            env:
                OUTPUT_FILENAME: "{{ funsize_product }}-{{ version }}.en-US.{{ buildbot2ftp(platform) }}.bz2.complete.mar"
                {% if moz_disable_mar_cert_verification is defined and moz_disable_mar_cert_verification %}
                MOZ_DISABLE_MAR_CERT_VERIFICATION: {{ moz_disable_mar_cert_verification }}
                {% endif %}
                SIGNING_CERT: {{ signing_cert }}
                SHA1_SIGNING_CERT: {{ signing_cert }}_sha1
                SHA384_SIGNING_CERT: {{ signing_cert }}_sha384

            artifacts:
                "public/env":
                    path: /home/worker/artifacts/
                    type: directory
                    expires: "{{ never }}"

-
    taskId: "{{ stableSlugId('{}_signing_task'.format(recompress_basename)) }}"
    reruns: 5
    requires:
        - "{{ stableSlugId('{}_repackage_complete_mars'.format(recompress_basename)) }}"
    task:
        created: "{{ now }}"
        deadline: "{{ now.replace(days=4) }}"
        expires: "{{ never }}"
        priority: "high"
        metadata:
            owner: release+funsize@mozilla.com
            source: https://github.com/mozilla/funsize
            name: "[funsize] Complete MAR signing task {{ platform }} {{ locale }}"
            description: |
                This task signs MAR files and publishes signed bits.

        routes:
            - tc-treeherder-stage.v2.{{ branch }}.{{ revision }}.{{ pushlog_id }}
            - tc-treeherder.v2.{{ branch }}.{{ revision }}.{{ pushlog_id }}
            - index.releases.v1.{{ branch }}.{{ revision }}.{{ product }}.{{ version | replace(".", "_") }}.build{{ buildNumber }}.completes_signing.{{ platform }}.{{ locale }}
            - index.releases.v1.{{ branch }}.latest.{{ product }}.latest.completes_signing.{{ platform }}.{{ locale }}
        extra:
            {{ common_extras(taskname='{}_signing_task'.format(recompress_basename), locales=["en-US"], platform=platform) | indent(12)}}
            treeherderEnv:
                - staging
                - production
            treeherder:
                symbol: {{ locale }}-rs
                groupSymbol: Update
                collection:
                    opt: true
                machine:
                    platform: {{ get_treeherder_platform(platform) }}
                build:
                    platform: {{ get_treeherder_platform(platform) }}

        workerType: "signing-worker-v1"
        provisionerId: "signing-provisioner-v1"
        scopes:
            - project:releng:signing:cert:{{ signing_class }}
            - project:releng:signing:format:gpg
            - project:releng:signing:format:mar
        tags:
            createdForUser: release+funsize@mozilla.com

        payload:
            signingManifest: "https://queue.taskcluster.net/v1/task/{{ stableSlugId('{}_repackage_complete_mars'.format(recompress_basename)) }}/artifacts/public/env/manifest.json"


{% if push_to_candidates_enabled %}{#  beetmover recompressed completes #}
{% set recompressed_beetmover_basename = "release-{}_{}_{}_recompressed_en-US_beetmover_candidates".format(branch, product, platform) %}
{% do artifact_completes_builders.append(recompressed_beetmover_basename) %}
-
    taskId: "{{ stableSlugId(recompressed_beetmover_basename) }}"
    requires:
        - "{{ stableSlugId('{}_signing_task'.format(recompress_basename)) }}"
        - "{{ stableSlugId("beetmove_image") }}"
    reruns: 5
    task:
        provisionerId: aws-provisioner-v1
        workerType: gecko-3-b-linux
        created: "{{ now }}"
        deadline: "{{ now.replace(days=4) }}"
        expires: "{{ never }}"
        priority: "high"
        retries: 5
        routes:
            - tc-treeherder-stage.v2.{{ branch }}.{{ revision }}.{{ pushlog_id }}
            - tc-treeherder.v2.{{ branch }}.{{ revision }}.{{ pushlog_id }}
            - index.releases.v1.{{ branch }}.{{ revision }}.{{ product }}.{{ version | replace(".", "_") }}.build{{ buildNumber }}.recompressed_beetmover.{{ platform }}.{{ locale }}
            - index.releases.v1.{{ branch }}.latest.{{ product }}.latest.recompressed_beetmove.{{ platform }}.{{ locale }}
        payload:
            maxRunTime: 7200
            # TODO - create specific image for this
            image:
                type: task-image
                path: public/image.tar.zst
                taskId: {{ stableSlugId("beetmove_image") }}
            command:
                - /bin/bash
                - -c
                - >
                  wget -O mozharness.tar.bz2 https://hg.mozilla.org/{{ repo_path }}/archive/{{ mozharness_changeset }}.tar.bz2/testing/mozharness &&
                  mkdir mozharness && tar xvfj mozharness.tar.bz2 -C mozharness --strip-components 3 && cd mozharness &&
                  python scripts/release/beet_mover.py --no-refresh-antivirus --template configs/beetmover/recompressed_completes.yml.tmpl --platform {{ buildbot2ftp(platform) }} --product {{ product }} --version {{ version }} --artifact-subdir env --locale en-US --taskid {{ stableSlugId('{}_signing_task'.format(recompress_basename)) }} --build-num build{{ buildNumber }} --bucket {{ beetmover_candidates_bucket }}
            env:
                DUMMY_ENV_FOR_ENCRYPT: "fake"
            encryptedEnv:
                - {{ encrypt_env_var(stableSlugId(recompressed_beetmover_basename), now_ms,
                                     now_ms + 24 * 4 * 3600 * 1000, 'AWS_ACCESS_KEY_ID',
                                     beetmover_aws_access_key_id) }}
                - {{ encrypt_env_var(stableSlugId(recompressed_beetmover_basename), now_ms,
                                     now_ms + 24 * 4 * 3600 * 1000, 'AWS_SECRET_ACCESS_KEY',
                                     beetmover_aws_secret_access_key) }}
        metadata:
            name: "[beetmover] {{ product }} {{ branch }} {{ platform }} en_US recompressed MAR candidates"
            description: "moves recompressed MAR artifacts for en_US based builds to candidates dir"
            owner: "release@mozilla.com"
            source: https://github.com/mozilla/releasetasks

        extra:
            {{ common_extras(taskname=recompressed_beetmover_basename, locales=["en-US"], platform=platform) | indent(12)}}
            treeherderEnv:
                - staging
                - production
            treeherder:
                symbol: en-US-r
                groupSymbol: BM
                collection:
                    opt: true
                machine:
                    platform: {{ get_treeherder_platform(platform) }}
                build:
                    platform: {{ get_treeherder_platform(platform) }}

{% endif %}{# push_to_candidates_enabled #}

{% do balrog_submission_builders.append('{}_balrog_task'.format(recompress_basename)) %}
-
    taskId: "{{ stableSlugId('{}_balrog_task'.format(recompress_basename)) }}"
    reruns: 5
    requires:
        - "{{ stableSlugId('{}_signing_task'.format(recompress_basename)) }}"
        - "{{ stableSlugId("funsize_balrog_image") }}"
    task:
        created: "{{ now }}"
        deadline: "{{ now.replace(days=4) }}"
        expires: "{{ never }}"
        priority: "high"
        routes:
            - tc-treeherder-stage.v2.{{ branch }}.{{ revision }}.{{ pushlog_id }}
            - tc-treeherder.v2.{{ branch }}.{{ revision }}.{{ pushlog_id }}
            - index.releases.v1.{{ branch }}.{{ revision }}.{{ product }}.{{ version | replace(".", "_") }}.build{{ buildNumber }}.completes_balrog.{{ platform }}.{{ locale }}
            - index.releases.v1.{{ branch }}.latest.{{ product }}.latest.completes_balrog.{{ platform }}.{{ locale }}
        extra:
            {{ common_extras(taskname='{}_balrog_task'.format(recompress_basename), locales=["en-US"], platform=platform) | indent(12)}}
            treeherderEnv:
                - staging
                - production
            treeherder:
                symbol: {{ locale }}-r-u
                groupSymbol: Update
                collection:
                    opt: true
                machine:
                    platform: {{ get_treeherder_platform(platform) }}
                build:
                    platform: {{ get_treeherder_platform(platform) }}

        metadata:
            owner: release+funsize@mozilla.com
            source: https://github.com/mozilla/funsize
            name: "[funsize] Publish to Balrog {{ platform }} {{ locale }}  recompressed complete MAR"
            description: |
                This task publishes signed complete updates to Balrog.

        workerType: "funsize-balrog"
        provisionerId: "aws-provisioner-v1"
        {% if balrog_vpn_proxy %}
        scopes:
            - docker-worker:feature:{{ balrog_vpn_proxy }}
        {% endif %}
        tags:
            createdForUser: release+funsize@mozilla.com

        payload:
            image:
                type: task-image
                path: public/image.tar.zst
                taskId: "{{ stableSlugId("funsize_balrog_image") }}"
            maxRunTime: 1800
            command:
                - /submit_complete.sh

            artifacts:
                "public/env":
                    path: /home/worker/artifacts/
                    type: directory
                    expires: "{{ never }}"
            env:
                PARENT_TASK_ARTIFACTS_URL_PREFIX: "https://queue.taskcluster.net/v1/task/{{ stableSlugId('{}_signing_task'.format(recompress_basename)) }}/artifacts/public/env"
                BALROG_API_ROOT: {{ funsize_balrog_api_root }}
                {% if extra_balrog_submitter_params is defined %}
                EXTRA_BALROG_SUBMITTER_PARAMS: "{{ extra_balrog_submitter_params }}"
                {% endif %}
                BALROG_BLOB_SUFFIX: "-bz2"
            encryptedEnv:
                - {{ encrypt_env_var(stableSlugId('{}_balrog_task'.format(recompress_basename)), now_ms,
                                    now_ms + 24 * 4 * 3600 * 1000, "BALROG_USERNAME",
                                    balrog_username) }}
                - {{ encrypt_env_var(stableSlugId('{}_balrog_task'.format(recompress_basename)), now_ms,
                                    now_ms + 24 * 4 * 3600 * 1000, "BALROG_PASSWORD",
                                    balrog_password) }}
            {% if balrog_vpn_proxy %}
            features:
                {{ balrog_vpn_proxy }}: true
            onExitStatus:
                retry: [-1]
            {% endif %}

{% endif %}{# lzma_to_bz2 #}

{% if updates_enabled %}  # funsize
{% for partial_version, partial_info in partial_updates.iteritems() %}
{% if partial_version < "56.0" %}
{% set mar_signing_format = "mar" %}
{% else %}
{% set mar_signing_format = "mar_sha384" %}
{% endif %}
{# The basename needs to be unique across all jobs in this graph, so we need to
   take into account everything about it that we can have more than one of in a
   single graph (platform, locale, partial_version, and build number). Notable
   things that aren't included in this:
   * branch, product - because funsize isn't implemented in Buildbot we don't
                       need any sort of "builder name" (that's what taskId and
                       taskGraphId are for!)
#}
{% set funsize_basename = "{}_{}_{}build{}_funsize".format(platform, locale, partial_version, partial_info["buildNumber"]) %}
-
    taskId: "{{ stableSlugId('{}_update_generator'.format(funsize_basename)) }}"
    reruns: 5
    requires:
        - "{{ stableSlugId("funsize_update_generator_image") }}"
    task:
        created: "{{ now }}"
        deadline: "{{ now.replace(days=4) }}"
        expires: "{{ never }}"
        priority: "high"
        metadata:
            owner: release+funsize@mozilla.com
            source: https://github.com/mozilla/funsize
            name: "[funsize] Update generating task {{ platform }} {{ locale }} for {{ partial_version }}"
            description: |
                This task generates MAR files and publishes unsigned bits.

        routes:
            - tc-treeherder-stage.v2.{{ branch }}.{{ revision }}.{{ pushlog_id }}
            - tc-treeherder.v2.{{ branch }}.{{ revision }}.{{ pushlog_id }}
            - index.releases.v1.{{ branch }}.{{ revision }}.{{ product }}.{{ version | replace(".", "_") }}.build{{ buildNumber }}.partials.{{ partial_version | replace(".", "_") }}.{{ platform }}.{{ locale }}
            - index.releases.v1.{{ branch }}.latest.{{ product }}.latest.partials.{{ partial_version | replace(".", "_") }}.{{ platform }}.{{ locale }}
        extra:
            {{ common_extras(taskname='{}_update_generator'.format(funsize_basename), locales=["en-US"], platform=platform) | indent(12)}}
            funsize:
                partials:
                    -
                        locale: {{ locale }}
                        # TODO: consider using stable URL for from_mar
                        from_mar: "http://download.mozilla.org/?product={{ product }}-{{ partial_version }}-complete&os={{ buildbot2bouncer(platform) }}&lang={{ locale }}"
                        {# TC based tasks have different signed/unsigned tasks and use a slightly different URL #}
                        {% if platform_info["ci_system"] == "bb" %}
                        to_mar: "https://queue.taskcluster.net/v1/task/{{ platform_info["signed_task_id"] }}/artifacts/public/build/{{ funsize_product }}-{{ appVersion }}.{{ locale }}.{{ buildbot2ftp(platform) }}.complete.mar"
                        {% else %}
                        {% if "repackage-signing_task_id" in platform_info %}
                        to_mar: "https://queue.taskcluster.net/v1/task/{{ platform_info["repackage-signing_task_id"] }}/artifacts/public/build/target.complete.mar"
                        {% else %}
                        to_mar: "https://queue.taskcluster.net/v1/task/{{ platform_info["signed_task_id"] }}/artifacts/public/build/update/target.complete.mar"
                        {% endif %}
                        {% endif %}
                        platform: {{ platform }}
                        branch: {{ branch }}
                        previousVersion: "{{ partial_version }}"
                        previousBuildNumber: {{ partial_info["buildNumber"] }}
                        toVersion: "{{ version }}"
                        toBuildNumber: {{ buildNumber }}
            treeherderEnv:
                - staging
                - production
            treeherder:
                symbol: {{ locale }}-{{ partial_version }}-g
                groupSymbol: Update
                collection:
                    opt: true
                machine:
                    platform: {{ get_treeherder_platform(platform) }}
                build:
                    platform: {{ get_treeherder_platform(platform) }}

        workerType: "funsize-mar-generator"
        provisionerId: "aws-provisioner-v1"

        tags:
            createdForUser: release+funsize@mozilla.com

        payload:
            image:
                type: task-image
                path: public/image.tar.zst
                taskId: "{{ stableSlugId("funsize_update_generator_image") }}"
            maxRunTime: 3600
            command:
                - /runme.sh

            env:
                FILENAME_TEMPLATE: "{{ funsize_product }}-{{ partial_version }}-{{ version }}.en-US.{{ buildbot2ftp(platform) }}.partial.mar"
                {% if moz_disable_mar_cert_verification is defined and moz_disable_mar_cert_verification %}
                MOZ_DISABLE_MAR_CERT_VERIFICATION: {{ moz_disable_mar_cert_verification }}
                {% endif %}
                SIGNING_CERT: {{ signing_cert }}
                SHA1_SIGNING_CERT: {{ signing_cert }}_sha1
                SHA384_SIGNING_CERT: {{ signing_cert }}_sha384
                {% if accepted_mar_channel_id is defined and accepted_mar_channel_id %}
                # explicitly set MAR channel name, ACCEPTED_MAR_CHANNEL_IDS is the corresponding variable in funsize.py
                ACCEPTED_MAR_CHANNEL_IDS: {{ accepted_mar_channel_id }}
                {% endif %}
                EXTRA_PARAMS: "--no-freshclam"

            artifacts:
                "public/env":
                    path: /home/worker/artifacts/
                    type: directory
                    expires: "{{ never }}"

-
    taskId: "{{ stableSlugId('{}_signing_task'.format(funsize_basename)) }}"
    reruns: 5
    requires:
        - "{{ stableSlugId('{}_update_generator'.format(funsize_basename)) }}"
    task:
        created: "{{ now }}"
        deadline: "{{ now.replace(days=4) }}"
        expires: "{{ never }}"
        priority: "high"
        metadata:
            owner: release+funsize@mozilla.com
            source: https://github.com/mozilla/funsize
            name: "[funsize] MAR signing task {{ platform }} {{ locale }} for {{ partial_version }}"
            description: |
                This task signs MAR files and publishes signed bits.

        routes:
            - tc-treeherder-stage.v2.{{ branch }}.{{ revision }}.{{ pushlog_id }}
            - tc-treeherder.v2.{{ branch }}.{{ revision }}.{{ pushlog_id }}
            - index.releases.v1.{{ branch }}.{{ revision }}.{{ product }}.{{ version | replace(".", "_") }}.build{{ buildNumber }}.partials_signing.{{ partial_version | replace(".", "_") }}.{{ platform }}.{{ locale }}
            - index.releases.v1.{{ branch }}.latest.{{ product }}.latest.partials_signing.{{ partial_version | replace(".", "_") }}.{{ platform }}.{{ locale }}
        extra:
            {{ common_extras(taskname='{}_signing_task'.format(funsize_basename), locales=["en-US"], platform=platform) | indent(12)}}
            treeherderEnv:
                - staging
                - production
            treeherder:
                symbol: {{ locale }}-{{ partial_version }}-s
                groupSymbol: Update
                collection:
                    opt: true
                machine:
                    platform: {{ get_treeherder_platform(platform) }}
                build:
                    platform: {{ get_treeherder_platform(platform) }}

        workerType: "signing-worker-v1"
        provisionerId: "signing-provisioner-v1"
        scopes:
            - project:releng:signing:cert:{{ signing_class }}
            - project:releng:signing:format:gpg
            - project:releng:signing:format:{{ mar_signing_format }}
        tags:
            createdForUser: release+funsize@mozilla.com

        payload:
            signingManifest: "https://queue.taskcluster.net/v1/task/{{ stableSlugId('{}_update_generator'.format(funsize_basename)) }}/artifacts/public/env/manifest.json"

{% do balrog_submission_builders.append('{}_balrog_task'.format(funsize_basename)) %}
-
    taskId: "{{ stableSlugId('{}_balrog_task'.format(funsize_basename)) }}"
    reruns: 5
    requires:
        - "{{ stableSlugId('{}_signing_task'.format(funsize_basename)) }}"
        - "{{ stableSlugId("funsize_balrog_image") }}"
    task:
        created: "{{ now }}"
        deadline: "{{ now.replace(days=4) }}"
        expires: "{{ never }}"
        priority: "high"
        routes:
            - tc-treeherder-stage.v2.{{ branch }}.{{ revision }}.{{ pushlog_id }}
            - tc-treeherder.v2.{{ branch }}.{{ revision }}.{{ pushlog_id }}
            - index.releases.v1.{{ branch }}.{{ revision }}.{{ product }}.{{ version | replace(".", "_") }}.build{{ buildNumber }}.partials_balrog.{{ partial_version | replace(".", "_") }}.{{ platform }}.{{ locale }}
            - index.releases.v1.{{ branch }}.latest.{{ product }}.latest.partials_balrog.{{ partial_version | replace(".", "_") }}.{{ platform }}.{{ locale }}
        extra:
            {{ common_extras(taskname='{}_balrog_task'.format(funsize_basename), locales=["en-US"], platform=platform) | indent(12)}}
            treeherderEnv:
                - staging
                - production
            treeherder:
                symbol: {{ locale }}-{{ partial_version }}-u
                groupSymbol: Update
                collection:
                    opt: true
                machine:
                    platform: {{ get_treeherder_platform(platform) }}
                build:
                    platform: {{ get_treeherder_platform(platform) }}

        metadata:
            owner: release+funsize@mozilla.com
            source: https://github.com/mozilla/funsize
            name: "[funsize] Publish to Balrog {{ platform }} {{ locale }} for {{ partial_version }}"
            description: |
                This task publishes signed updates to Balrog.

        workerType: "funsize-balrog"
        provisionerId: "aws-provisioner-v1"
        {% if balrog_vpn_proxy %}
        scopes:
            - docker-worker:feature:{{ balrog_vpn_proxy }}
        {% endif %}
        tags:
            createdForUser: release+funsize@mozilla.com

        payload:
            image:
                type: task-image
                path: public/image.tar.zst
                taskId: "{{ stableSlugId("funsize_balrog_image") }}"
            maxRunTime: 1800
            command:
                - /runme.sh

            artifacts:
                "public/env":
                    path: /home/worker/artifacts/
                    type: directory
                    expires: "{{ never }}"
            env:
                {% if moz_disable_mar_cert_verification is defined and moz_disable_mar_cert_verification%}
                MOZ_DISABLE_MAR_CERT_VERIFICATION: {{ moz_disable_mar_cert_verification }}
                {% endif %}
                SIGNING_CERT: {{ signing_cert }}
                SHA1_SIGNING_CERT: {{ signing_cert }}_sha1
                SHA384_SIGNING_CERT: {{ signing_cert }}_sha384
                PARENT_TASK_ARTIFACTS_URL_PREFIX: "https://queue.taskcluster.net/v1/task/{{ stableSlugId('{}_signing_task'.format(funsize_basename)) }}/artifacts/public/env"
                BALROG_API_ROOT: {{ funsize_balrog_api_root }}
                # TODO: should funsize be publishing to an s3 bucket? or will beetmover do that?
                {% if extra_balrog_submitter_params is defined %}
                EXTRA_BALROG_SUBMITTER_PARAMS: "{{ extra_balrog_submitter_params }}"
                {% endif %}
                {% if partial_version < "56.0" %}
                BALROG_BLOB_SUFFIX: "-bz2"
                {% endif %}
            encryptedEnv:
                - {{ encrypt_env_var(stableSlugId('{}_balrog_task'.format(funsize_basename)), now_ms,
                                    now_ms + 24 * 4 * 3600 * 1000, "BALROG_USERNAME",
                                    balrog_username) }}
                - {{ encrypt_env_var(stableSlugId('{}_balrog_task'.format(funsize_basename)), now_ms,
                                    now_ms + 24 * 4 * 3600 * 1000, "BALROG_PASSWORD",
                                    balrog_password) }}
            {% if balrog_vpn_proxy %}
            features:
                {{ balrog_vpn_proxy }}: true
            onExitStatus:
                retry: [-1]
            {% endif %}

{% if push_to_candidates_enabled %}  # beetmover partials
{% set partial_beetmover_basename = "release-{}_{}_{}_partial_en-US_{}build{}_beetmover_candidates".format(branch, product, platform, partial_version, partial_info["buildNumber"]) %}
{% do artifact_partials_builders.append(partial_beetmover_basename) %}
-
    taskId: "{{ stableSlugId(partial_beetmover_basename) }}"
    requires:
        - "{{ stableSlugId('{}_signing_task'.format(funsize_basename)) }}"
        - "{{ stableSlugId("beetmove_image") }}"
    reruns: 5
    task:
        provisionerId: aws-provisioner-v1
        workerType: gecko-3-b-linux
        created: "{{ now }}"
        deadline: "{{ now.replace(days=4) }}"
        expires: "{{ never }}"
        priority: "high"
        retries: 5
        routes:
            - tc-treeherder-stage.v2.{{ branch }}.{{ revision }}.{{ pushlog_id }}
            - tc-treeherder.v2.{{ branch }}.{{ revision }}.{{ pushlog_id }}
            - index.releases.v1.{{ branch }}.{{ revision }}.{{ product }}.{{ version | replace(".", "_") }}.build{{ buildNumber }}.partials_beetmover.{{ partial_version | replace(".", "_") }}.{{ platform }}.{{ locale }}
            - index.releases.v1.{{ branch }}.latest.{{ product }}.latest.partials_beetmover.{{ partial_version | replace(".", "_") }}.{{ platform }}.{{ locale }}
        payload:
            maxRunTime: 7200
            # TODO - create specific image for this
            image:
                type: task-image
                path: public/image.tar.zst
                taskId: {{ stableSlugId("beetmove_image") }}
            command:
                - /bin/bash
                - -c
                - >
                  wget -O mozharness.tar.bz2 https://hg.mozilla.org/{{ repo_path }}/archive/{{ mozharness_changeset }}.tar.bz2/testing/mozharness &&
                  mkdir mozharness && tar xvfj mozharness.tar.bz2 -C mozharness --strip-components 3 && cd mozharness &&
                  python scripts/release/beet_mover.py --no-refresh-antivirus --template configs/beetmover/partials.yml.tmpl --platform {{ buildbot2ftp(platform) }} --product {{ product }} --version {{ version }} --partial-version {{ partial_version }} --artifact-subdir env --locale en-US --taskid {{ stableSlugId('{}_signing_task'.format(funsize_basename)) }} --build-num build{{ buildNumber }} --bucket {{ beetmover_candidates_bucket }}
            env:
                DUMMY_ENV_FOR_ENCRYPT: "fake"
            encryptedEnv:
                - {{ encrypt_env_var(stableSlugId(partial_beetmover_basename), now_ms,
                                   now_ms + 24 * 4 * 3600 * 1000, 'AWS_ACCESS_KEY_ID',
                                   beetmover_aws_access_key_id) }}
                - {{ encrypt_env_var(stableSlugId(partial_beetmover_basename), now_ms,
                                   now_ms + 24 * 4 * 3600 * 1000, 'AWS_SECRET_ACCESS_KEY',
                                   beetmover_aws_secret_access_key) }}
        metadata:
            name: "[beetmover] {{ product }} {{ branch }} {{ platform }} en_US partials candidates"
            description: "moves partial artifacts for en_US based builds to candidates dir"
            owner: "release@mozilla.com"
            source: https://github.com/mozilla/releasetasks

        extra:
            {{ common_extras(taskname=partial_beetmover_basename, locales=["en-US"], platform=platform) | indent(12)}}
            treeherderEnv:
                - staging
                - production
            treeherder:
                symbol: en-US-{{ partial_version }}
                groupSymbol: BM
                collection:
                    opt: true
                machine:
                    platform: {{ get_treeherder_platform(platform) }}
                build:
                    platform: {{ get_treeherder_platform(platform) }}
{% endif %}  # push_to_candidates_enabled

{% endfor %} # partials
{% endif %}  # updates_enabled

{% endfor %} # platforms
